{"version":3,"sources":["components/NavBar/NavBar.tsx","App.tsx","pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","NavBar","className","role","to","App","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PersonItem","born","died","mother","motherName","father","fatherName","useParams","PeopleTable","people","loading","isError","length","map","PeoplePage","useState","setPeople","setLoading","setIsError","parents","data","preparedData","find","m","f","useEffect","catch","finally","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.0b5ae250.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { NavBar } from './components/NavBar/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <Outlet />\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonItem: React.FC<Props> = ({ person }) => {\n  const {\n    sex,\n    born,\n    died,\n    mother,\n    motherName,\n    father,\n    fatherName,\n  } = person;\n\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': slug === person.slug },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? <PersonLink person={mother} /> : (\n          motherName || '-'\n        )}\n      </td>\n      <td>\n        {father ? <PersonLink person={father} /> : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonItem } from '../PersonItem/PersonItem';\n\ntype Props = {\n  people: Person[]\n  loading: boolean;\n  isError: boolean;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, loading, isError }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {!loading && isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!loading && !isError && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!loading && !isError && !!people.length && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PersonItem person={person} key={person.slug} />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const parents = (data: Person[]) => {\n    const preparedData = data.map((person) => {\n      return {\n        ...person,\n        mother: data.find(m => m.name === person.motherName),\n        father: data.find(f => f.name === person.fatherName),\n      };\n    });\n\n    setPeople(preparedData);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getPeople()\n      .then(parents)\n      .catch(() => setIsError(true))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People page</h1>\n      <PeopleTable\n        people={people}\n        loading={loading}\n        isError={isError}\n      />\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  Navigate,\n  Route,\n  BrowserRouter as Router,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}